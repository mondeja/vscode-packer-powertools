{
  "type": {
    "description": "The `type` argument in a `variable` block allows you to restrict the type of value that will be accepted as the value for a variable. If no type constraint is set then a value of any type is accepted.\n\nWhile type constraints are optional, we recommend specifying them; they serve as easy reminders for users of the build, and allow Packer to return a helpful error message if the wrong type is used.",
    "required": false,
    "url": "https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints"
  },
  "defaultArg": {
    "description": "The `variable` declaration can also include a `default` argument. If present, the variable is considered to be _optional_ and the default value will be used if no value is set when calling the build or running Packer. The `default` argument requires a literal value and cannot reference other objects in the configuration.",
    "required": false,
    "url": "https://www.packer.io/docs/templates/hcl_templates/variables#declaring-an-input-variable"
  },
  "description": {
    "description": "Because the input variables of a build are part of its user interface, you can briefly describe the purpose of each variable using the optional `description` argument.\n\nThe description should concisely explain the purpose of the variable and what kind of value is expected. This description string might be included in documentation about the build, and so it should be written from the perspective of the user of the build rather than its maintainer. For commentary for build maintainers, use comments.",
    "required": false,
    "url": "https://www.packer.io/docs/templates/hcl_templates/variables#input-variable-documentation"
  }
}
