{
  "communicator": {
    "description": "Communicators are the mechanism Packer uses to upload files, execute scripts, etc. with the machine being created. They are configured within the builder section. Packer currently supports three kinds of communicators:\n\n- `none` - No communicator will be used. If this is set, most provisioners also can't be used.\n- `ssh` - An SSH connection will be established to the machine. This is usually the default.\n- `winrm` - A WinRM connection will be established.",
    "required": false,
    "type": "string",
    "url": "https://www.packer.io/docs/communicators"
  },
  "pause_before_connecting": {
    "description": "We recommend that you enable SSH or WinRM as the very last step in your guest's bootstrap script, but sometimes you may have a race condition where you need Packer to wait before attempting to connect to your guest.\n\nIf you end up in this situation, you can use the template option `pause_before_connecting`. By default, there is no pause. For example if you set `pause_before_connecting` to `10m` Packer will check whether it can connect, as normal. But once a connection attempt is successful, it will disconnect and then wait 10 minutes before connecting to the guest and beginning provisioning.",
    "required": false,
    "type": "duration string | ex: \"1h5m2s\"",
    "url": "https://www.packer.io/docs/templates/legacy_json_templates/communicator"
  },
  "sources": {
    "description": "You can set `sources` to an array of strings with references to pre-defined sources as an alternative to defining build-level `source` blocks.",
    "required": false,
    "type": "list[string]",
    "url": "https://www.packer.io/docs/templates/hcl_templates/blocks/build#the-build-block"
  },
  "name": {
    "description": "Represents the name of the build block being run. This is different than the name of the source block being run.",
    "required": true,
    "type": "string",
    "url": "https://www.packer.io/docs/templates/hcl_templates/contextual-variables#build-variables"
  }
}
